// Code generated by goctl. DO NOT EDIT!
// Source: helloService.proto

//go:generate mockgen -destination ./helloservice_mock.go -package helloserviceclient -source $GOFILE

package helloserviceclient

import (
	"context"

	"github.com/LeeDF/zerologs/rpc/helloService/helloService"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	PingRequest  = helloService.PingRequest
	PingResponse = helloService.PingResponse

	HelloService interface {
		Ping(ctx context.Context, in *PingRequest) (*PingResponse, error)
	}

	defaultHelloService struct {
		cli zrpc.Client
	}
)

func NewHelloService(cli zrpc.Client) HelloService {
	return &defaultHelloService{
		cli: cli,
	}
}

func (m *defaultHelloService) Ping(ctx context.Context, in *PingRequest) (*PingResponse, error) {
	client := helloService.NewHelloServiceClient(m.cli.Conn())
	return client.Ping(ctx, in)
}
